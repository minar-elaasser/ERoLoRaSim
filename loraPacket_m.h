//
// Generated file, do not edit! Created by nedtool 5.2 from loraPacket.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __ALOHA_LORAPACKET_M_H
#define __ALOHA_LORAPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace aloha {

/**
 * Class generated from <tt>loraPacket.msg:6</tt> by nedtool.
 * <pre>
 * packet loraPacket
 * {
 *     int SF;
 *     //int BW; check later if we need that?
 *     double chFreq; //channel frequency!(la2en howa msh shart same index at each host and server:)
 *     double SNR;
 *     int pktType;
 * }
 * </pre>
 */
class loraPacket : public ::omnetpp::cPacket
{
  protected:
    int SF;
    double chFreq;
    double SNR;
    int pktType;

  private:
    void copy(const loraPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const loraPacket&);

  public:
    loraPacket(const char *name=nullptr, short kind=0);
    loraPacket(const loraPacket& other);
    virtual ~loraPacket();
    loraPacket& operator=(const loraPacket& other);
    virtual loraPacket *dup() const override {return new loraPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSF() const;
    virtual void setSF(int SF);
    virtual double getChFreq() const;
    virtual void setChFreq(double chFreq);
    virtual double getSNR() const;
    virtual void setSNR(double SNR);
    virtual int getPktType() const;
    virtual void setPktType(int pktType);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const loraPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, loraPacket& obj) {obj.parsimUnpack(b);}

} // namespace aloha

#endif // ifndef __ALOHA_LORAPACKET_M_H

