//
// Generated file, do not edit! Created by nedtool 5.2 from InterferencePacket.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __ALOHA_INTERFERENCEPACKET_M_H
#define __ALOHA_INTERFERENCEPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace aloha {

/**
 * Class generated from <tt>InterferencePacket.msg:5</tt> by nedtool.
 * <pre>
 * packet InterferencePacket
 * {
 *     double BW;
 *     double Power;
 * }
 * </pre>
 */
class InterferencePacket : public ::omnetpp::cPacket
{
  protected:
    double BW;
    double Power;

  private:
    void copy(const InterferencePacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const InterferencePacket&);

  public:
    InterferencePacket(const char *name=nullptr, short kind=0);
    InterferencePacket(const InterferencePacket& other);
    virtual ~InterferencePacket();
    InterferencePacket& operator=(const InterferencePacket& other);
    virtual InterferencePacket *dup() const override {return new InterferencePacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual double getBW() const;
    virtual void setBW(double BW);
    virtual double getPower() const;
    virtual void setPower(double Power);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const InterferencePacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, InterferencePacket& obj) {obj.parsimUnpack(b);}

} // namespace aloha

#endif // ifndef __ALOHA_INTERFERENCEPACKET_M_H

